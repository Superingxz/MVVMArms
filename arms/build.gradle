apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        //Room
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //DataBinding
    dataBinding {
        enabled true
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    //repository
    api project(':repository')
    api project(':lifecycle')

    //support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api(rootProject.ext.dependencies["appcompat-v7"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["design"]) {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'support-v4'
    }
    api(rootProject.ext.dependencies["cardview-v7"]) {
        exclude module: 'support-annotations'
    }
    api rootProject.ext.dependencies["annotations"]

    //view
    api(rootProject.ext.dependencies["brvah"]) {
        exclude module: 'recyclerview-v7'
    }

    //mvvm(Lifecycles, LiveData, and ViewModel, Room)
    api rootProject.ext.dependencies["lifecycle-runtime"]
    api rootProject.ext.dependencies["lifecycle-extensions"]
    annotationProcessor rootProject.ext.dependencies["lifecycle-compiler"]
    api rootProject.ext.dependencies["room-runtime"]
    annotationProcessor rootProject.ext.dependencies["room-compiler"]
    testApi(rootProject.ext.dependencies["room-testing"]) {
        exclude module: 'support-compat'
        exclude module: 'support-annotations'
        exclude module: 'support-core-utils'
        exclude module: 'gson'
    }
    api rootProject.ext.dependencies["room-rxjava2"]

    //tools
    provided rootProject.ext.dependencies["javax.annotation"]
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api(rootProject.ext.dependencies["dagger2-android"]) {
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["dagger2-android-support"]) {
        exclude module: 'jsr305'
        exclude module: 'appcompat-v7'
    }
    annotationProcessor(rootProject.ext.dependencies["dagger2-android-processor"]) {
        exclude module: 'jsr305'
    }
    api rootProject.ext.dependencies["androideventbus"]
    annotationProcessor(rootProject.ext.dependencies["glide-compiler"]) {
        exclude module: 'jsr305'
    }

    //test
    api rootProject.ext.dependencies["timber"]
    testApi rootProject.ext.dependencies["junit"]
    androidTestApi(rootProject.ext.dependencies["espresso-core"]) {
        exclude module: 'support-annotations'
    }

}
